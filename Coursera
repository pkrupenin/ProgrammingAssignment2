makeCacheMatrix <- function(x = matrix()) {
	##This is a function which creates matrix that can cache its 	
  ##inverse for the input
  inv <- NULL
  get <- function() x
  set <- function(y) {
    x <<- y
    inv <<- NULL
  }
  
  getinv <- function() inv
  setinv <- function(inverse) inv <<- inverse
  
  list(get=get, set=set, getinv=getinv, setinv=setinv)
}

cacheSolve <- function(x, ...) {
	##This function computes the inverse of the matrix returned by the 
	##previous function. If the computation is already done, function 	
  ##retrieves it from cache
  inv <- x$getinv()
    if (!is.null(inv)) {
    message("inverse is cached")
    return(inv)
  }
  
  m <- x$get()
  inv <- solve(m, ...)
  
  x$setinv(inv)
